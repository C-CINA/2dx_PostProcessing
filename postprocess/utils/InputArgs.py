import argparse.ArgumentParser

class Args:

    def __init__(self):
        self._init_parser()

    def _init_parser(self):
        usage = 'bin/postprocess'
        description = 'A program which does a post processing the 3D-Image(.mrc) ' \
                      'file generated after merging the tilted and non-tilted '\
                      'images generated by 2D-EM.'
        
        self.parser = ArgumentParser(usage=usage, description=description)
        
        self.parser.add_argument('merged_image',
                                 type=open,
                                 help='The merged 3D image of format (.mrc) which needs to be post-processed')
        
        self.parser.add_argument('-i',
                                 '--iterations',
                                 default=20,
                                 type=int,
                                 help='Number of post-processing iterations to be performed')
        
        self.parser.add_argument('-s',
                                 '--symmetry',
                                 default='C1',
                                 help='Point group symmetry present in the volume')
        
        self.parser.add_argument('-h',
                                 '--membrane_height',
                                 default='-1',
                                 type=int,
                                 help='Membrane height for membrane slab (use -1 if slab constraint is to be skipped)')
        
        self.parser.add_argument('-r',
                                 '--highest_rsolution',
                                 default='2',
                                 type=float,
                                 help='The maximum resolution present in the map (in A)')

    def parse(self, args=None):
        return self.parser.parse_args(args)